/*
 * More web UI HTML source arrays.
 * This file is auto generated, please don't make any changes manually.
 * Instead, see https://github.com/Aircoookie/WLED/wiki/Add-own-functionality#web-ui
 * to find out how to easily modify the web UI source!
 */ 

// Autogenerated from wled00/data/style.css, do not edit!!
const char PAGE_settingsCss[] PROGMEM = R"=====(<style>body{font-family:Verdana,sans-serif;text-align:center;background:#222;color:#fff;line-height:200%%;margin:0}hr{border-color:#666}.btn,button{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.3ch solid #333;display:inline-block;font-size:20px;margin:12px 8px 8px;padding:1px 6px;cursor:pointer;text-decoration:none}.lnk{border:0}.helpB{text-align:left;position:absolute;width:60px}input{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.5ch solid #333}input[type=number]{width:4em;margin:2px}input[type=number].xxl{width:100px}input[type=number].xl{width:85px}input[type=number].l{width:63px}input[type=number].m{width:56px}input[type=number].s{width:49px}input[type=number].xs{width:42px}input[type=checkbox]{transform:scale(1.5);margin-right:10px}select{background:#333;color:#fff;font-family:Verdana,sans-serif;border:.5ch solid #333}td{padding:2px}.d5{width:4.5em!important}#toast{opacity:0;background-color:#444;border-radius:5px;bottom:64px;color:#fff;font-size:17px;padding:16px;pointer-events:none;position:fixed;text-align:center;z-index:5;transform:translateX(-50%%);max-width:90%%;left:50%%}#toast.show{opacity:1;background-color:#264;animation:fadein .5s,fadein .5s 2.5s reverse}#toast.error{opacity:1;background-color:#b21;animation:fadein .5s}</style>)=====";


// Autogenerated from wled00/data/settings.htm, do not edit!!
const char PAGE_settings[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta charset="UTF-8"><title>WLED 设置
</title><style>
body{text-align:center;background:#222;height:100px;margin:0}html{--h:10.2vh}button{background:#333;color:#fff;font-family:Verdana,Helvetica,sans-serif;border:1px solid #333;font-size:6vmin;height:var(--h);width:95%%;margin-top:2vh}
</style><script>
function BB(){window.frameElement&&(document.getElementById("b").style.display="none",document.documentElement.style.setProperty("--h","13.86vh"))}
</script></head><body onload="BB()"><form action="/"><button type="submit" 
id="b">返回</button></form><form action="/settings/wifi"><button type="submit">
无线设置</button></form><form action="/settings/leds"><button type="submit">LED 首选项
</button></form><form action="/settings/ui"><button type="submit">用户界面</button>
</form><form action="/settings/sync"><button type="submit">同步接口</button></form>
<form action="/settings/time"><button type="submit">时间和宏</button></form><form 
action="/settings/um"><button type="submit">用户模块</button></form><form 
action="/settings/sec"><button type="submit">安全与更新</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_wifi.htm, do not edit!!
const char PAGE_settings_wifi[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>无线设置</title><script>
function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#wifi-settings")}function B(){window.open("/settings","_self")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<form id="form_s" name="Sf" method="post"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
返回</button><button type="submit">保存并连接</button><hr><h2>WIFI设置</h2><h3>连接到现有网络
</h3>WIFI名称(SSID，为空表示不连接):<br><input name="CS" maxlength="32"><br>WIFI密码:<br>
<input type="password" name="CP" maxlength="63"><br>静态 IP(0.0.0.0表示使用DHCP):<br>
<input name="I0" type="number" class="s" min="0" max="255" required> . <input 
name="I1" type="number" class="s" min="0" max="255" required> . <input 
name="I2" type="number" class="s" min="0" max="255" required> . <input 
name="I3" type="number" class="s" min="0" max="255" required><br>静态网关:<br><input
 name="G0" type="number" class="s" min="0" max="255" required> . <input 
name="G1" type="number" class="s" min="0" max="255" required> . <input 
name="G2" type="number" class="s" min="0" max="255" required> . <input 
name="G3" type="number" class="s" min="0" max="255" required><br>静态子网掩码:<br>
<input name="S0" type="number" class="s" min="0" max="255" required> . <input 
name="S1" type="number" class="s" min="0" max="255" required> . <input 
name="S2" type="number" class="s" min="0" max="255" required> . <input 
name="S3" type="number" class="s" min="0" max="255" required><br>
mDNS 地址(无 mDNS 留空):<br>http:// <input name="CM" maxlength="32"> .local<br>
客户端IP: <span class="sip">未连接</span><br><h3>配置接入点</h3>AP SSID (留空为关闭AP):<br>
<input name="AS" maxlength="32"><br>隐藏 AP 名称: <input type="checkbox" name="AH">
<br>AP 密码(留空为不设置):<br><input type="password" name="AP" maxlength="63" 
pattern="(.{8,63})|()" title="Empty or min. 8 characters"><br>接入点 WiFi 信道: 
<input name="AC" type="number" class="xs" min="1" max="13" required><br>
AP opens: <select name="AB"><option value="0">开机后无连接</option><option value="1">
断开连接</option><option value="2">总是</option><option value="3">从不(不推荐)</option>
</select><br>AP IP: <span class="sip">不活跃</span><br><h3>实验性设置</h3>禁用 WiFi 睡眠: 
<input type="checkbox" name="WS"><br><i>可以帮助解决连接问题<br>如果 WiFi 工作正常，则不要启用，会增加功耗
</i><div id="ethd"><h3>以太网类型</h3><select name="ETH"><option value="0">无</option>
<option value="2">ESP32-POE</option><option value="6">ESP32Deux</option><option 
value="4">QuinLED-ESP32</option><option value="5">TwilightLord-ESP32</option>
<option value="3">WESP32</option><option value="1">WT32-ETH01</option></select>
<br><br></div><hr><button type="button" onclick="B()">返回</button><button 
type="submit">保存并连接</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_leds.htm, do not edit!!
const char PAGE_settings_leds[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>LED 设置</title><script>
var timeout,d=document,laprev=55,maxB=1,maxM=5e3,maxPB=4096,bquot=0;function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#led-settings")}function B(){window.open("/settings","_self")}function gId(e){return d.getElementById(e)}function off(e){d.getElementsByName(e)[0].value=-1}function showToast(e,n=!1){var a=gId("toast");a.innerHTML=e,a.className=n?"error":"show",clearTimeout(timeout),a.style.animation="none",timeout=setTimeout((function(){a.className=a.className.replace("show","")}),2900)}function bLimits(e,n,a){maxB=e,maxM=a,maxPB=n}function pinsOK(){var e=d.getElementsByTagName("input");for(i=0;i<e.length;i++){var n=e[i].name.substring(0,2);if(("L0"==n||"L1"==n||"L2"==n||"L3"==n||"L4"==n||"RL"==n||"BT"==n||"IR"==n)&&""!=e[i].value&&"-1"!=e[i].value){if(d.um_p&&d.um_p.some(n=>n==parseInt(e[i].value,10)))return alert(`对不起, pins ${JSON.stringify(d.um_p)} 不能使用`),e[i].value="",e[i].focus(),!1;if(e[i].value>5&&e[i].value<12)return alert("抱歉，无法使用pins 6-11"),e[i].value="",e[i].focus(),!1;for(j=i+1;j<e.length;j++){var a=e[j].name.substring(0,2);if(("L0"==a||"L1"==a||"L2"==a||"L3"==a||"L4"==a||"RL"==a||"BT"==a||"IR"==a)&&""!=e[j].value&&e[i].value==e[j].value)return alert(`pin之间的冲突 ${n}/${a}!`),e[j].value="",e[j].focus(),!1}}}return!0}function trySubmit(e){if(e.preventDefault(),!pinsOK())return e.stopPropagation(),!1;if(bquot>100){var n="LED 过多,无法处理!";maxM<1e4&&(n+="\n\r难道还不考虑试着用用ESP32?"),alert(n)}d.Sf.checkValidity()&&d.Sf.submit()}function S(){GetV(),setABL()}function enABL(){var e=gId("able").checked;d.Sf.LA.value=e?laprev:0,gId("abl").style.display=e?"inline":"none",gId("psu2").style.display=e?"inline":"none",d.Sf.LA.value>0&&setABL()}function enLA(){var e=d.Sf.LAsel.value;d.Sf.LA.value=e,gId("LAdis").style.display=50==e?"inline":"none",UI()}function setABL(){switch(gId("able").checked=!0,d.Sf.LAsel.value=50,parseInt(d.Sf.LA.value)){case 0:gId("able").checked=!1,enABL();break;case 30:d.Sf.LAsel.value=30;break;case 35:d.Sf.LAsel.value=35;break;case 55:d.Sf.LAsel.value=55;break;case 255:d.Sf.LAsel.value=255;break;default:gId("LAdis").style.display="inline"}gId("m1").innerHTML=maxM,d.getElementsByName("Sf")[0].addEventListener("submit",trySubmit),UI()}function getMem(e,n,a){return e<32?maxM<1e4&&3==a?e>29?20*n:15*n:maxM>=1e4?e>29?8*n:6*n:e>29?4*n:3*n:e>31&&e<48?5:44==e||45==e?4*n:3*n}function UI(e=!1){var n=!1,a=0;gId("ampwarning").style.display=d.Sf.MA.value>7200?"inline":"none",255==d.Sf.LA.value?laprev=12:d.Sf.LA.value>0&&(laprev=d.Sf.LA.value);var t=d.getElementsByTagName("select");for(u=0;u<t.length;u++)if("LT"==t[u].name.substring(0,2)){g=t[u].name.substring(2);var i=parseInt(t[u].value,10);gId("p0d"+g).innerHTML=i>49?"Data:":i>41?"Pins:":"Pin:",gId("p1d"+g).innerHTML=i>49?"Clk:":"";var l=d.getElementsByName("L1"+g)[0];for(a+=getMem(i,d.getElementsByName("LC"+g)[0].value,d.getElementsByName("L0"+g)[0].value),c=1;c<5;c++){(l=d.getElementsByName("L"+c+g)[0])&&(i>49&&1==c||i>41&&i<50&&c+40<i?(l.style.display="inline",l.required=!0):(l.style.display="none",l.required=!1,l.value=""))}(30==i||31==i||i>40&&i<46&&43!=i)&&(n=!0),gId("dig"+g).style.display=i>31&&i<48?"none":"inline",gId("psd"+g).innerHTML=i>31&&i<48?"Index:":"Start:"}var o=d.querySelectorAll(".wc"),s=o.length;for(u=0;u<s;u++)o[u].style.display=n?"inline":"none";if(d.activeElement==d.getElementsByName("LC")[0]){var u=d.getElementsByClassName("iST").length;1==u&&(d.getElementsByName("LC0")[0].value=d.getElementsByName("LC")[0].value)}var r=d.getElementsByTagName("input"),p=0,m=0;for(u=0;u<r.length;u++){var v=r[u].name.substring(0,2);if("LC"!=v||"LC"===r[u].name){if("L0"==v||"L1"==v)d.getElementsByName("LC"+r[u].name.substring(2))[0].max=maxPB;if(("L0"==v||"L1"==v||"L2"==v||"L3"==v||"L4"==v||"RL"==v||"BT"==v||"IR"==v)&&""!=r[u].value&&"-1"!=r[u].value){var c=[];if(d.um_p&&Array.isArray(d.um_p))for(k=0;k<d.um_p.length;k++)c.push(d.um_p[k]);for(j=0;j<r.length;j++)if(u!=j){var L=r[j].name.substring(0,2);"L0"!=L&&"L1"!=L&&"L2"!=L&&"L3"!=L&&"L4"!=L&&"RL"!=L&&"BT"!=L&&"IR"!=L||""!=r[j].value&&"-1"!=r[j].value&&c.push(parseInt(r[j].value,10))}c.some(e=>e==parseInt(r[u].value,10))?r[u].style.color="red":r[u].style.color="#fff"}}else{var g=r[u].name.substring(2),f=parseInt(r[u].value,10);gId("ls"+g).readOnly&&(gId("ls"+g).value=p),f&&(p+=f,f>m&&(m=f))}}gId("m0").innerHTML=a,bquot=a/maxM*100,gId("dbar").style.background=`linear-gradient(90deg, ${bquot>60?bquot>90?"red":"orange":"#ccc"} 0 ${bquot}%%, #444 ${bquot}%% 100%%)`,gId("ledwarning").style.display=p>maxPB||m>800||bquot>80?"inline":"none",gId("ledwarning").style.color=p>maxPB||m>maxPB||bquot>100?"red":"orange",gId("wreason").innerHTML=bquot>80?"最大值的80%。LED 内存"+(bquot>100?` (<b>W警告：过度使用 ${maxM}B!</b>)`:""):"每个pin 800 个LED";var y=Math.ceil((100+p*laprev)/500)/2;y=y>5?Math.ceil(y):y;t="";var b=30==d.Sf.LAsel.value,I=255==d.Sf.LAsel.value;y<1.02&&!b&&!I?t="带 1A USB 电源的 ESP 5V 引脚":(t+=b?"12V ":I?"WS2815 12V ":"5V ",t+=y,t+="连接到LED的电源");var B=Math.ceil((100+p*laprev)/1500)/2,S="(for most effects, ~";S+=B=B>5?Math.ceil(B):B,S+="A is enough)<br>",gId("psu").innerHTML=t,gId("psu2").innerHTML=I?"":S,gId("json").style.display=8==d.Sf.IT.value?"":"none"}function lastEnd(e){if(e<1)return 0;v=parseInt(d.getElementsByName("LS"+(e-1))[0].value)+parseInt(d.getElementsByName("LC"+(e-1))[0].value);var n=parseInt(d.getElementsByName("LT"+(e-1))[0].value);return n>31&&n<48&&(v=1),isNaN(v)?0:v}function addLEDs(e){if(e>1)return maxB=e,void(gId("+").style.display="inline");var n=d.getElementsByClassName("iST"),a=n.length;if(!(1==e&&a>=maxB||-1==e&&0==a)){var t=gId("mLC");if(1==e){var i=`<div class="iST">\n${a>0?'<hr style="width:260px">':""}\n${a+1}:\n<select name="LT${a}" onchange="UI()">\n<option value="22">WS281x</option>\n<option value="30">SK6812 RGBW</option>\n<option value="31">TM1814</option>\n<option value="24">400kHz</option>\n<option value="50">WS2801</option>\n<option value="51">APA102</option>\n<option value="52">LPD8806</option>\n<option value="53">P9813</option>\n<option value="41">PWM White</option>\n<option value="42">PWM WWCW</option>\n<option value="43">PWM RGB</option>\n<option value="44">PWM RGBW</option>\n<option value="45">PWM RGBWC</option>\n</select>&nbsp;\n颜色线序:\n<select name="CO${a}">\n<option value="0">GRB</option>\n<option value="1">RGB</option>\n<option value="2">BRG</option>\n<option value="3">RBG</option>\n<option value="4">BGR</option>\n<option value="5">GBR</option>\n</select><br>\n<span id="p0d${a}">Pin:</span> <input type="number" class="xs" name="L0${a}" min="0" max="33" required onchange="UI()"/>\n<span id="p1d${a}">Clock:</span> <input type="number" class="xs" name="L1${a}" min="0" max="33" onchange="UI()"/>\n<span id="p2d${a}"></span><input type="number" class="xs" name="L2${a}" min="0" max="33" onchange="UI()"/>\n<span id="p3d${a}"></span><input type="number" class="xs" name="L3${a}" min="0" max="33" onchange="UI()"/>\n<span id="p4d${a}"></span><input type="number" class="xs" name="L4${a}" min="0" max="33" onchange="UI()"/>\n<br>\n<span id="psd${a}">开始:</span> <input type="number" name="LS${a}" id="ls${a}" min="0" max="8191" value="${lastEnd(a)}" required />&nbsp;\n<div id="dig${a}" style="display:inline">\nCount: <input type="number" name="LC${a}" min="0" max="${maxPB}" value="1" required oninput="UI()" /><br>\nReverse (rotated 180°): <input type="checkbox" name="CV${a}">\n&nbsp;Skip 1<sup>st</sup> LED: <input id="sl${a}" type="checkbox" name="SL${a}"><br>\n</div>\n</div>`;t.insertAdjacentHTML("beforeend",i)}-1==e&&(n[--a].remove(),--a),gId("+").style.display=a<maxB-1?"inline":"none",gId("-").style.display=a>0?"inline":"none",UI()}}function addBtn(e,n,a){var t=gId("btns").innerHTML,i="BT"+e;t+=`Button ${e} pin: <input type="number" class="xs" min="-1" max="40" name="${i}" onchange="UI()" value="${n}">&nbsp;`,t+=`<select name="${"BE"+e}">`,t+=`<option value="0" ${0==a?"selected":""}>禁用</option>`,t+=`<option value="2" ${2==a?"selected":""}>按钮</option>`,t+=`<option value="3" ${3==a?"selected":""}>Push inverted</option>`,t+=`<option value="4" ${4==a?"selected":""}>开关</option>`,t+=`<option value="5" ${5==a?"selected":""}>被动红外传感器(PIR)</option>`,t+=`<option value="6" ${6==a?"selected":""}>触摸</option>`,t+=`<option value="7" ${7==a?"selected":""}>模拟</option>`,t+=`<option value="8" ${8==a?"selected":""}>Analog inverted</option>`,t+="</select>",t+=`<span style="cursor: pointer;" onclick="off('${i}')">&nbsp;&#215;</span><br>`,gId("btns").innerHTML=t}function uploadFile(e){var n=new XMLHttpRequest;n.addEventListener("load",(function(){showToast(this.responseText)})),n.addEventListener("error",(function(e){showToast(e.stack,!0)})),n.open("POST","/upload");var a=new FormData;return a.append("data",d.Sf.data.files[0],e),n.send(a),d.Sf.data.value="",!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">返回</button>
<button type="submit">保存</button><hr><h2>LED &amp; 硬件设置</h2>LED总数: <input 
name="LC" id="LC" type="number" min="1" max="8192" oninput="UI()" required><br>
<i>最亮、白光的推荐电源:</i><br><b><span id="psu">?</span></b><br><span id="psu2"><br>
</span><br>启用自动亮度限制器: <input type="checkbox" name="ABen" onchange="enABL()" 
id="able"><br><div id="abl">最大电流: <input name="MA" type="number" class="l" 
min="250" max="65000" oninput="UI()" required> mA<br><div id="ampwarning" 
style="color:orange;display:none">&#9888; 你的电源提供高电流。<br>提高设置的安全性,<br>请使用粗电缆,<br>
使用多个电源注入点和保险丝!<br></div><i>自动限制亮度以保持接近极限。<br>保持在 &lt;1A 如果直接从 ESP 5V 引脚为LED供电!
<br>如果使用的是外部电源，请输入其额定值。<br>(当前估计使用量: <span class="pow">未知</span>)</i><br><br>
LED电压 (最大。单个 LED 的电流):<br><select name="LAsel" onchange="enLA()"><option 
value="55" selected="selected">默认 5V (55mA)</option><option value="35">
5V 高效 (35mA)</option><option value="30">12V (30mA)</option><option value="255">
WS2815 (12mA)</option><option value="50">定制</option></select><br><span 
id="LAdis" style="display:none">自定义最大值每个 LED 的电流: <input name="LA" 
type="number" min="0" max="255" id="la" oninput="UI()" required> mA<br></span>
<i>如果不确定 LED 的类型，请保持默认。</i><br></div><h3>硬件设置</h3><div id="mLC">LED输出:</div>
<button type="button" id="+" onclick="addLEDs(1)" 
style="display:none;border-radius:20px;height:36px">+</button> <button 
type="button" id="-" onclick="addLEDs(-1)" 
style="display:none;border-radius:20px;width:36px;height:36px">-</button><br>
LED 内存使用: <span id="m0">0</span> / <span id="m1">?</span> B<br><div id="dbar" 
style="display:inline-block;width:100px;height:10px;border-radius:20px"></div>
<br><div id="ledwarning" style="color:orange;display:none">
&#9888; 您可能会遇到稳定性或滞后问题<br>使用少于 <span id="wreason">每个引脚 800 个LED</span> 为了最好的体验!
<br></div><hr style="width:260px"><div id="btns"></div>触摸阈值: <input 
type="number" class="s" min="0" max="100" name="TT" required><br>红外引脚: <input 
type="number" class="xs" min="-1" max="40" name="IR" onchange="UI()">&nbsp;
<select name="IT" onchange="UI()"><option value="0">远程禁用</option><option 
value="1">24-key RGB</option><option value="2">24-key with CT</option><option 
value="3">40-key blue</option><option value="4">44-key RGB</option><option 
value="5">21-key RGB</option><option value="6">6-key black</option><option 
value="7">9-key red</option><option value="8">JSON 远程</option></select><span 
style="cursor:pointer" onclick='off("IR")'>&nbsp;&#215;</span><br><div 
id="json" style="display:none">JSON 文件: <input type="file" name="data" 
accept=".json"> <input type="button" value="Upload" 
onclick='uploadFile("/ir.json")'><br></div><div id="toast"></div><a 
href="https://github.com/Aircoookie/WLED/wiki/Infrared-Control" target="_blank">
红外信息</a><br>继电器引脚(pin): <input type="number" class="xs" min="-1" max="33" 
name="RL" onchange="UI()"> 反转 <input type="checkbox" name="RM"><span 
style="cursor:pointer" onclick='off("RL")'>&nbsp;&#215;</span><br><hr 
style="width:260px"><h3>默认值</h3>上电/复位后打开 LED: <input type="checkbox" name="BO">
<br>默认亮度: <input name="CA" type="number" class="s" min="0" max="255" required>
 (0-255)<br><br>应用预设 <input name="BP" type="number" class="s" min="0" max="250" 
required> 开机时(0时使用默认值)<br><br>对颜色使用 Gamma 校正: <input type="checkbox" name="GC">
 (强烈推荐)<br>使用 Gamma 校正亮度: <input type="checkbox" name="GB"> (不推荐)<br><br>亮度系数: 
<input name="BF" type="number" class="s" min="1" max="255" required> %<h3>过渡
</h3>淡入淡出: <input type="checkbox" name="TF"><br>过渡时间: <input name="TD" 
type="number" class="l" min="0" max="65500"> ms<br>启用调色板过渡: <input 
type="checkbox" name="PF"><h3>定时灯</h3>默认时长: <input name="TL" type="number" 
class="s" min="1" max="255" required> min<br>默认目标亮度: <input name="TB" 
type="number" class="s" min="0" max="255" required><br>模式: <select name="TW">
<option value="0">等待并设置</option><option value="1">淡入淡出</option><option 
value="2">褪色</option><option value="3">日出</option></select><h3>高级</h3>调色板混合: 
<select name="PB"><option value="0">Linear (wrap if moving)</option><option 
value="1">Linear (always wrap)</option><option value="2">Linear (never wrap)
</option><option value="3">None (not recommended)</option></select><br><span 
class="wc">从 RGB 自动计算白色通道:<br><select name="AW"><option value="0">无</option>
<option value="1">更亮</option><option value="2">准确</option><option value="3">Dual
</option><option value="4">Legacy</option></select><br></span><hr><button 
type="button" onclick="B()">返回</button><button type="submit">保存</button></form>
</body></html>)=====";


#ifdef WLED_ENABLE_DMX

// Autogenerated from wled00/data/settings_dmx.htm, do not edit!!
const char PAGE_settings_dmx[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>DMX 设置</title><script>
function GCH(n){for(d=document,d.getElementById("dmxchannels").innerHTML+="",i=0;i<n;i++)d.getElementById("dmxchannels").innerHTML+="<span id=CH"+(i+1)+"s >通道 "+(i+1)+": <select name=CH"+(i+1)+' id="CH'+(i+1)+'"><option value=0>设置为 0</option><option value=1>红</option><option value=2>绿</option><option value=3>蓝</option><option value=4>白色</option><option value=5>快门 (亮度)</option><option value=6>设置到 255</option></select></span><br />\n'}function mMap(){for(d=document,numCh=document.Sf.CN.value,numGap=document.Sf.CG.value,parseInt(numCh)>parseInt(numGap)?d.getElementById("gapwarning").style.display="block":d.getElementById("gapwarning").style.display="none",i=0;i<15;i++)i>=numCh?(d.getElementById("CH"+(i+1)+"s").style.opacity="0.5",d.getElementById("CH"+(i+1)).disabled=!0):(d.getElementById("CH"+(i+1)+"s").style.opacity="1",d.getElementById("CH"+(i+1)).disabled=!1)}function S(){GCH(15),GetV(),mMap()}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/DMX")}function B(){window.history.back()}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">Back</button>
<button type="submit">保存</button><hr><h2>Imma firin ma lazer (如果它有 DMX 支持)</h2>
Proxy Universe <input name="PU" type="number" min="0" max="63999" required>
 从 E1.31 到 DMX (0=禁用)<br><i>这将禁用 LED 数据输出到下面可配置的 DMX</i><br><br><i>
灯的数量取自 LED 配置页面</i><br>Channels per fixture (15 max): <input type="number" 
min="1" max="15" name="CN" maxlength="2" onchange="mMap()"><br>Start channel: 
<input type="number" min="1" max="512" name="CS" maxlength="2"><br>
Spacing between start channels: <input type="number" min="1" max="512" 
name="CG" maxlength="2" onchange="mMap()"> [ <a 
href="javascript:alert('如果设置为 10，第一个装置将从 10 开始,\n第二个将从 20 等开始\n与通道数无关\n使记忆通道号码更容易.');">
info</a> ]<br><div id="gapwarning" style="color:orange;display:none">
警告：通道间隙低于每个夹具的通道<br>这将导致重叠</div><button type="button" 
onclick='location.href="/dmxmap"'>DMX 地图</button><br>DMX 灯具启动 LED: <input 
type="number" min="0" max="1500" name="SL"><h3>通道功能</h3><div id="dmxchannels">
</div><hr><button type="button" onclick="B()">返回</button><button type="submit">
保存</button></form></body></html>)=====";


#else
const char PAGE_settings_dmx[] PROGMEM = R"=====()=====";
#endif

// Autogenerated from wled00/data/settings_ui.htm, do not edit!!
const char PAGE_settings_ui[] PROGMEM = R"=====(<!DOCTYPE html><html><head lang="ch"><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>用户界面设置</title><script>
var initial_ds,initial_st,timeout,d=document,sett=null,l={comp:{labels:"显示按钮标签",colors:{LABEL:"颜色选择方法",picker:"色轮",rgb:"RGB 滑块",quick:"快速颜色选择器",hex:"十六进制颜色输入"},pcmbot:"在 PC 模式下显示底部标签栏",pid:"显示预设 ID",seglen:"设置segment长度而不是停止 LED",css:"启用自定义 CSS",hdays:"启用自定义假期列表"},theme:{alpha:{bg:"背景不透明度",tab:"按钮不透明度"},bg:{url:"BG图片网址",random:"随机 BG 图像"},color:{bg:"BG 十六进制颜色"}}};function gId(e){return d.getElementById(e)}function isObject(e){return e&&"object"==typeof e&&!Array.isArray(e)}function set(e,t,i){for(var n=t,s=e.split("_"),a=s.length,l=0;l<a-1;l++){var o=s[l];n[o]||(n[o]={}),n=n[o]}n[s[a-1]]=i}function showToast(e,t=!1){var i=gId("toast");i.innerHTML=e,i.className=t?"error":"show",clearTimeout(timeout),i.style.animation="none",timeout=setTimeout((function(){i.className=i.className.replace("show","")}),2900)}function addRec(e,t="",n=null){var s="";for(i in e){var a=t+(t?"_":"")+i;if(isObject(e[i]))n&&n[i]&&n[i].LABEL&&(s+=`<h3>${n[i].LABEL}</h3>`),s+=addRec(e[i],a,n?n[i]:null);else{var l=a;if(n&&n[i]?l=n[i]:e[i+"LABEL"]&&(l=e[i+"LABEL"]),i.indexOf("LABEL")>0)continue;var o=typeof e[i];gId(a)?("boolean"===o?gId(a).checked=e[i]:gId(a).value=e[i],gId(a).previousElementSibling.matches(".l")&&(gId(a).previousElementSibling.innerHTML=l)):"boolean"===o?s+=`${l}: <input class="agi cb" type="checkbox" id=${a} ${e[i]?"checked":""}><br>`:"number"===o?s+=`${l}: <input class="agi" type="number" id=${a} value=${e[i]}><br>`:"string"===o&&(s+=`${l}:<br><input class="agi" id=${a} value=${e[i]}><br>`)}}return s}function genForm(e){var t;t=addRec(e,"",l),gId("gen").innerHTML=t}function GetLS(){(sett=localStorage.getItem("wledUiCfg"))||(gId("lserr").style.display="inline");try{sett=JSON.parse(sett)}catch(e){sett={},gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Settings JSON parsing failed. ("+e+")"}genForm(sett),gId("dm").checked="light"===gId("theme_base").value}function SetLS(){for(var e=d.querySelectorAll(".agi"),t=0;t<e.length;t++){var i=e[t],n=i.classList.contains("cb")?i.checked:i.value;set(i.id,sett,n),console.log(`${i.id} set to ${n}`)}try{localStorage.setItem("wledUiCfg",JSON.stringify(sett)),gId("lssuc").style.display="inline"}catch(i){gId("lssuc").style.display="none",gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Settings JSON saving failed. ("+i+")"}}function Save(){SetLS(),d.Sf.DS.value==initial_ds&&d.Sf.ST.checked==initial_st||d.Sf.submit()}function S(){GetV(),initial_ds=d.Sf.DS.value,initial_st=d.Sf.ST.checked,GetLS()}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#user-interface-settings")}function B(){window.open("/settings","_self")}function UI(){gId("idonthateyou").style.display=gId("dm").checked?"inline":"none";var e=gId("theme_base");e&&(e.value=gId("dm").checked?"light":"dark")}function setRandomBg(){gId("theme_bg_random").checked?gId("theme_bg_url").value="https://picsum.photos/1920/1080":gId("theme_bg_url").value=""}function checkRandomBg(){"https://picsum.photos/1920/1080"===gId("theme_bg_url").value?gId("theme_bg_random").checked=!0:gId("theme_bg_random").checked=!1}function uploadFile(e,t){var i=new XMLHttpRequest;i.addEventListener("load",(function(){showToast(this.responseText)})),i.addEventListener("error",(function(e){showToast(e.stack,!0)})),i.open("POST","/upload");var n=new FormData;return n.append("data",e.files[0],t),i.send(n),e.value="",!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div 
style="position:sticky;top:0;background-color:#222"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
返回</button><button type="button" onclick="Save()">保存</button><br><span 
id="lssuc" style="color:green;display:none">&#10004; 已保存本地 UI 设置!</span> <span 
id="lserr" style="color:red;display:none">&#9888; 无法访问本地存储。确保它在您的浏览器中启用。</span>
<hr></div><h2>网页设置</h2>服务器描述: <input name="DS" maxlength="32"><br>同步按钮切换发送和接收: 
<input type="checkbox" name="ST"><br><i>以下 UI 自定义设置对于 WLED 设备和此浏览器都是唯一的。<br>
如果使用不同的浏览器、设备或 WLED IP 地址，您将需要重新设置它们。<br>刷新 UI 以应用更改。</i><br><div id="gen">
Loading settings...</div><h3>界面外观</h3><span class="l"></span>: <input 
type="checkbox" id="comp_labels" class="agi cb"><br><span class="l"></span>: 
<input type="checkbox" id="comp_pcmbot" class="agi cb"><br><span class="l">
</span>: <input type="checkbox" id="comp_pid" class="agi cb"><br><span 
class="l"></span>: <input type="checkbox" id="comp_seglen" class="agi cb"><br>
我讨厌黑暗模式: <input type="checkbox" id="dm" onchange="UI()"><br><span 
id="idonthateyou" style="display:none"><i>你为什么要这样做? </i>&#x1F97A;<br></span>
<span class="l"></span>: <input type="number" min="0.0" max="1.0" step="0.01" 
id="theme_alpha_tab" class="agi"><br><span class="l"></span>: <input 
type="number" min="0.0" max="1.0" step="0.01" id="theme_alpha_bg" class="agi">
<br><span class="l"></span>: <input id="theme_color_bg" maxlength="9" 
class="agi"><br><span class="l">背景图片网址</span>: <input id="theme_bg_url" 
class="agi" oninput="checkRandomBg()"><br><span class="l">随机背景图像</span>: <input 
type="checkbox" id="theme_bg_random" class="agi cb" onchange="setRandomBg()">
<br><input id="theme_base" class="agi" style="display:none"> <span class="l">
</span>: <input type="checkbox" id="comp_css" class="agi cb"><br><div id="skin">
自定义 CSS: <input type="file" name="data" accept=".css"> <input type="button" 
value="Upload" onclick='uploadFile(d.Sf.data,"/skin.css")'><br></div><span 
class="l"></span>: <input type="checkbox" id="comp_hdays" class="agi cb"><br>
<div id="holidays">假期: <input type="file" name="data2" accept=".json"> <input 
type="button" value="Upload" onclick='uploadFile(d.Sf.data2,"/holidays.json")'>
<br></div><div id="toast"></div><hr><button type="button" onclick="B()">返回
</button><button type="button" onclick="Save()">保存</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_sync.htm, do not edit!!
const char PAGE_settings_sync[] PROGMEM = R"=====(<!DOCTYPE html><html lang="en"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>Sync Settings</title><script>
var d=document;function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#sync-settings")}function B(){window.open("/settings","_self")}function adj(){6454==d.Sf.DI.value?(1==d.Sf.DA.value&&(d.Sf.DA.value=0),1==d.Sf.EU.value&&(d.Sf.EU.value=0)):5568==d.Sf.DI.value&&(0==d.Sf.DA.value&&(d.Sf.DA.value=1),0==d.Sf.EU.value&&(d.Sf.EU.value=1))}function SP(){var e=d.Sf.DI.value;d.getElementById("xp").style.display=e>0?"none":"block",e>0&&(d.Sf.EP.value=e)}function SetVal(){switch(parseInt(d.Sf.EP.value)){case 5568:d.Sf.DI.value=5568;break;case 6454:d.Sf.DI.value=6454;break;case 4048:d.Sf.DI.value=4048}SP()}function S(){GetV(),SetVal()}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">返回</button>
<button type="submit">保存</button><hr><h2>同步设置</h2><h3>WLED广播</h3>UDP Port: 
<input name="UP" type="number" min="1" max="65535" class="d5" required><br>
2nd Port: <input name="U2" type="number" min="1" max="65535" class="d5" 
required><br>接收: <input type="checkbox" name="RB">亮度, <input type="checkbox" 
name="RC">颜色 ,<input type="checkbox" name="RX">效果<br>发送有关直接更改的通知: <input 
type="checkbox" name="SD"><br>按下按钮或红外线时发送通知: <input type="checkbox" name="SB">
<br>发送 Alexa 通知: <input type="checkbox" name="SA"><br>发送飞利浦 Hue 更改通知: <input 
type="checkbox" name="SH"><br>发送宏通知: <input type="checkbox" name="SM"><br>
发送两次通知: <input type="checkbox" name="S2"><br><i>应用更改需要重新启动。</i><h3>实例列表</h3>
启用实例列表: <input type="checkbox" name="NL"><br>使此实例可发现: <input type="checkbox" 
name="NB"><h3>实时</h3>实时接收UDP: <input type="checkbox" name="RD"><br><br><i>
网络DMX输入</i><br>类型: <select name="DI" onchange="SP(),adj()"><option value="5568">
E1.31 (sACN)</option><option value="6454">Art-Net</option><option value="4048">
DDP</option><option value="0" selected="selected">自定义端口</option></select><br>
<div id="xp">Port: <input name="EP" type="number" min="1" max="65535" 
value="5568" class="d5" required><br></div>组播: <input type="checkbox" name="EM">
<br>Start universe: <input name="EU" type="number" min="0" max="63999" required>
<br><i>需要重启.</i> Check out <a href="https://github.com/LedFx/LedFx" 
target="_blank">LedFx</a>!<br>跳过乱序数据包: <input type="checkbox" name="ES"><br>
DMX 起始地址: <input name="DA" type="number" min="0" max="510" required><br>DMX 模式: 
<select name="DM"><option value="0">禁用</option><option value="1">Single RGB
</option><option value="2">Single DRGB</option><option value="3">Effect</option>
<option value="4">Multi RGB</option><option value="5">Dimmer + Multi RGB
</option><option value="6">Multi RGBW</option></select><br><a 
href="https://github.com/Aircoookie/WLED/wiki/E1.31-DMX" target="_blank">
E1.31 info</a><br>超时: <input name="ET" type="number" min="1" max="65000" 
required> ms<br>强制最大亮度: <input type="checkbox" name="FB"><br>禁用实时伽马校正: <input 
type="checkbox" name="RG"><br>实时 LED 偏移: <input name="WO" type="number" 
min="-255" max="255" required><br><br>实时 HSV 色彩校正: <input type="checkbox" 
name="HX"><br>饱和度 (1-30): <input name="HS" type="number" min="1" max="30" 
value="1" step="1"><br>价值 (1-60): <input name="HV" type="number" min="1" 
max="60" value="10" step="1"><h3>Alexa 语音助手</h3>模拟 Alexa 设备: <input 
type="checkbox" name="AL"><br>Alexa 调用名称: <input name="AI" maxlength="32"><h3>
Blynk</h3><b>Blynk, MQTT 和 Hue 同步全部连接到外部主机!<br>这可能会影响 ESP8266 的响应能力。</b><br>
为获得最佳效果，请一次仅使用其中一项服务。<br>(或者，将第二个 ESP 连接到它们并使用 UDP 同步)<br><br>主机: <input 
name="BH" maxlength="32"> 端口: <input name="BP" type="number" min="1" 
max="65535" value="80" class="d5"><br>设备身份验证令牌: <input name="BK" maxlength="33">
<br><i>清除令牌字段以禁用 </i><a href="https://github.com/Aircoookie/WLED/wiki/Blynk" 
target="_blank">Setup info</a><h3>MQTT</h3>启用 MQTT: <input type="checkbox" 
name="MQ"><br>Broker: <input name="MS" maxlength="32"> 端口: <input name="MQPORT" 
type="number" min="1" max="65535" class="d5"><br><b>MQTT 凭证通过不安全的连接发送<br>
切勿将 MQTT 密码用于其他服务!</b><br>用户名: <input name="MQUSER" maxlength="40"><br>密码: 
<input type="password" name="MQPASS" maxlength="64"><br>Client ID: <input 
name="MQCID" maxlength="40"><br>Device Topic: <input name="MD" maxlength="32">
<br>Group Topic: <input name="MG" maxlength="32"><br>Publish on button press: 
<input type="checkbox" name="BM"><br><i>应用更改需要重新启动 </i><a 
href="https://github.com/Aircoookie/WLED/wiki/MQTT" target="_blank">MQTT 信息</a>
<h3>Philips Hue</h3><i>您可以在 Hue 应用的“关于”部分找到网桥 IP 和灯号。</i><br>轮询色相灯 <input 
name="HL" type="number" min="1" max="99"> 每 <input name="HI" type="number" 
min="100" max="65000"> ms: <input type="checkbox" name="HP"><br>然后,接收 <input 
type="checkbox" name="HO"> On/Off, <input type="checkbox" name="HB"> 亮度, <input 
type="checkbox" name="HC"> Color<br>Hue Bridge IP:<br><input name="H0" 
type="number" min="0" max="255"> . <input name="H1" type="number" min="0" 
max="255"> . <input name="H2" type="number" min="0" max="255"> . <input 
name="H3" type="number" min="0" max="255"><br><b>按下网桥上的pushlink按钮，然后保存此页面!</b>
<br>(第一次连接时)<br>Hue status: <span class="sip">在此版本中禁用</span><hr><button 
type="button" onclick="B()"></button>返回<button type="submit">保存</button></form>
</body></html>)=====";


// Autogenerated from wled00/data/settings_time.htm, do not edit!!
const char PAGE_settings_time[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>时间设置</title><script>
var d=document;function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#time-settings")}function B(){window.open("/settings","_self")}function S(){BTa(),GetV(),Cs(),FC()}function gId(t){return d.getElementById(t)}function Cs(){gId("cac").style.display="none",gId("coc").style.display="block",gId("ccc").style.display="none",gId("ca").selected&&(gId("cac").style.display="block"),gId("cc").selected&&(gId("coc").style.display="none",gId("ccc").style.display="block"),gId("cn").selected&&(gId("coc").style.display="none")}function BTa(){var t="<tr><th>使能</th><th>小时</th><th>分钟</th><th>预设</th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th><th>周日</th></tr>";for(i=0;i<8;i++)for(t+='<tr><td><input name="W'+i+'" id="W'+i+'" type="number" style="display:none"><input id="W'+i+'0" type="checkbox"></td><td><input name="H'+i+'" type="number" min="0" max="24"></td><td><input name="N'+i+'" type="number" min="0" max="59"></td><td><input name="T'+i+'" type="number" min="0" max="250"></td>',j=1;j<8;j++)t+='<td><input id="W'+i+j+'" type="checkbox"></td>';for(t+='<tr><td><input name="W8" id="W8" type="number" style="display:none"><input id="W80" type="checkbox"></td><td>日出<input name="H8" value="255" type="hidden"></td><td><input name="N8" type="number" min="-59" max="59"></td><td><input name="T8" type="number" min="0" max="250"></td>',j=1;j<8;j++)t+='<td><input id="W8'+j+'" type="checkbox"></td>';for(t+='<tr><td><input name="W9" id="W9" type="number" style="display:none"><input id="W90" type="checkbox"></td><td>日落<input name="H9" value="255" type="hidden"></td><td><input name="N9" type="number" min="-59" max="59"><td><input name="T9" type="number" min="0" max="250"></td>',j=1;j<8;j++)t+='<td><input id="W9'+j+'" type="checkbox"></td>';gId("TMT").innerHTML=t}function FC(){for(j=0;j<8;j++)for(i=0;i<10;i++)gId("W"+i+j).checked=gId("W"+i).value>>j&1}function Wd(){for(a=[0,0,0,0,0,0,0,0,0,0],i=0;i<10;i++){for(m=1,j=0;j<8;j++)a[i]+=gId("W"+i+j).checked*m,m*=2;gId("W"+i).value=a[i]}}function addRow(t,e,n,i){var d=gId("macros"),u=d.rows.length,c=d.insertRow(u);document.createElement("td");c.insertCell(0).innerHTML=`Button ${t}:`,c.insertCell(1).innerHTML=`<input name="MP${t}" type="number" min="0" max="250" value="${e}" required>`,c.insertCell(2).innerHTML=`<input name="ML${t}" type="number" min="0" max="250" value="${n}" required>`,c.insertCell(3).innerHTML=`<input name="MD${t}" type="number" min="0" max="250" value="${i}" required>`}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="Wd()"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Back</button><button type="submit">Save</button><hr><h2>时间设置</h2>从NTP服务器获取时间: 
<input type="checkbox" name="NT"><br><input name="NS" maxlength="32"><br>
使用 24 小时制: <input type="checkbox" name="CF"><br>时区: <select name="TZ"><option 
value="0" selected="selected">GMT(UTC)</option><option value="1">GMT/BST
</option><option value="2">CET/CEST</option><option value="3">EET/EEST</option>
<option value="4">US-EST/EDT</option><option value="5">US-CST/CDT</option>
<option value="6">US-MST/MDT</option><option value="7">US-AZ</option><option 
value="8">US-PST/PDT</option><option value="9">CST(AWST)</option><option 
value="10">JST(KST)</option><option value="11">AEST/AEDT</option><option 
value="12">NZST/NZDT</option><option value="13">North Korea</option><option 
value="14">IST (India)</option><option value="15">CA-Saskatchewan</option>
<option value="16">ACST</option><option value="17">ACST/ACDT</option><option 
value="18">HST (Hawaii)</option></select><br>UTC 偏移量: <input name="UO" 
type="number" min="-65500" max="65500" required> 秒 (最大值 18 小时)<br>当前当地时间是 <span 
class="times">未知</span>.<br>纬度 (N): <input name="LT" type="number" min="-66.6" 
max="66.6" step="0.01"> 经度 (E): <input name="LN" type="number" min="-180" 
max="180" step="0.01"><div id="sun" class="times"></div><h3>时钟</h3>时钟叠加: <select
 name="OL" onchange="Cs()"><option value="0" id="cn" selected="selected">无
</option><option value="1" id="ca">模拟时钟</option><option value="2">单数时钟</option>
<option value="3" id="cc">Cronixie 时钟</option></select><br><div id="coc">
First LED: <input name="O1" type="number" min="0" max="255" required> 最后一个 LED: 
<input name="O2" type="number" min="0" max="255" required><br><div id="cac">
12h LED: <input name="OM" type="number" min="0" max="255" required><br>
显示 5 分钟标记: <input type="checkbox" name="O5"><br></div>秒(作为轨迹): <input 
type="checkbox" name="OS"><br></div><div id="ccc">Cronixie 显示: <input name="CX" 
maxlength="6"><br>Cronixie 背光: <input type="checkbox" name="CB"><br></div>
倒计时模式: <input type="checkbox" name="CE"><br>倒计时目标:<br>年: 20 <input name="CY" 
type="number" min="0" max="99" required> 月: <input name="CI" type="number" 
min="1" max="12" required> 天: <input name="CD" type="number" min="1" max="31" 
required><br>小时: <input name="CH" type="number" min="0" max="23" required> 分: 
<input name="CM" type="number" min="0" max="59" required> 秒: <input name="CS" 
type="number" min="0" max="59" required><br><h3>宏预设</h3><b>宏已移动!</b><br><i>
预设现在也可以用作宏来保存 JSON 和 HTTP API 命令<br>只需在下面输入预设 ID!</i> <i>使用 0 作为默认操作而不是预设</i>
<br>Alexa 开/关预设: <input name="A0" type="number" min="0" max="250" required> 
<input name="A1" type="number" min="0" max="250" required><br>倒计时预设: <input 
name="MC" type="number" min="0" max="250" required><br>定时灯光预设: <input name="MN" 
type="number" min="0" max="250" required><br><h3>按钮操作</h3><table 
style="margin:0 auto" id="macros"><thead><tr><td>按下<br>开关</td><td>短按<br>开-&gt;关
</td><td>长按<br>关-&gt;开</td><td>双击<br>N/A</td></tr></thead><tbody></tbody>
</table><a href="https://github.com/Aircoookie/WLED/wiki/Macros#analog-button" 
target="_blank">模拟按钮设置</a><h3>时间控制预设</h3><div style="display:inline-block">
<table id="TMT"></table></div><hr><button type="button" onclick="B()">返回
</button><button type="submit">保存</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_sec.htm, do not edit!!
const char PAGE_settings_sec[] PROGMEM = R"=====(<!DOCTYPE html><html lang="ch"><head><meta name="viewport" content="width=500">
<meta charset="utf-8"><title>其他设置</title><script>
var timeout,d=document;function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#security-settings")}function B(){window.open("/settings","_self")}function U(){window.open("/update","_self")}function gId(t){return d.getElementById(t)}function isObject(t){return t&&"object"==typeof t&&!Array.isArray(t)}function showToast(t,e=!1){var n=gId("toast");n.innerHTML=t,n.className=e?"error":"show",clearTimeout(timeout),n.style.animation="none",timeout=setTimeout((function(){n.className=n.className.replace("show","")}),2900)}function uploadFile(t,e){var n=new XMLHttpRequest;n.addEventListener("load",(function(){showToast(this.responseText)})),n.addEventListener("error",(function(t){showToast(t.stack,!0)})),n.open("POST","/upload");var o=new FormData;return o.append("data",t.files[0],e),n.send(o),t.value="",!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<form id="form_s" name="Sf" method="post"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Back</button><button type="submit">保存并重启</button><hr><h2>安全和更新设置</h2>
锁定无线(OTA)软件更新: <input type="checkbox" name="NO"><br>密码: <input type="password" 
name="OP" maxlength="32"><br>要启用 OTA，出于安全原因，您还需要输入正确的密码!<br>启用OTA时应更改密码。<br><b>
在不使用时禁用 OTA，否则攻击者可以重新刷新设备软件!</b><br><i>只有在禁用 OTA 锁定时才能更改此页面上的设置!</i><br>
如果锁定，则拒绝访问 WiFi 设置： <input type="checkbox" name="OW"><br><br>恢复出厂设置: <input 
type="checkbox" name="RS"><br>所有设置和预设都将被删除。<br><br>HTTP流量未加密。同一网络中的攻击者可以拦截表单数据!
<h3>软件更新</h3><button type="button" onclick="U()">手动 OTA 更新</button><br>
启用 ArduinoOTA: <input type="checkbox" name="AO"><br><h3>备份与恢复</h3><a 
class="btn lnk" href="/presets.json?download" target="download-frame">备份预设</a>
<br><div>恢复预设<br><input type="file" name="data" accept=".json"> <input 
type="button" value="Upload" onclick='uploadFile(d.Sf.data,"/presets.json")'>
<br></div><br><a class="btn lnk" href="/cfg.json?download" 
target="download-frame">备份配置</a><br><div>恢复配置<br><input type="file" 
name="data2" accept=".json"> <input type="button" value="Upload" 
onclick='uploadFile(d.Sf.data2,"/cfg.json")'><br></div><div style="color:#fa0">
&#9888; 恢复预设/配置将覆盖您当前的预设/配置。<br>不正确的配置可能需要将您的 ESP 恢复出厂设置或重新刷机。</div>
出于安全原因，不会备份密码。<h3>About</h3><a href="https://github.com/Aircoookie/WLED/" 
target="_blank">WLED</a> version 0.13.0-b2-ch<br><br><a 
href="https://github.com/Aircoookie/WLED/wiki/Contributors-and-credits" 
target="_blank">Contributors, dependencies and special thanks</a><br>
非常感谢所有帮助我创建 WLED 的人!<br><br>(c) 2016-2021 Christian Schwinne<br><i>根据许可 <a 
href="https://github.com/Aircoookie/WLED/blob/master/LICENSE" target="_blank">
MIT license</a></i><br><br>服务器消息: <span class="sip">响应错误!</span><hr><div 
id="toast"></div><button type="button" onclick="B()">返回</button><button 
type="submit">保存并重启</button></form><iframe name="download-frame" 
style="display:none"></iframe></body></html>)=====";


// Autogenerated from wled00/data/settings_um.htm, do not edit!!
const char PAGE_settings_um[] PROGMEM = R"=====(<!DOCTYPE html><html><head lang="ch"><meta charset="utf-8"><meta 
name="viewport" content="width=500"><title>用户配置设置</title><script>
var owner,locip,urows,d=document,umCfg={},pins=[6,7,8,9,10,11],pinO=["rsvd","rsvd","rsvd","rsvd","rsvd","rsvd"],loc=!1,numM=0;function gId(e){return d.getElementById(e)}function isO(e){return e&&"object"==typeof e&&!Array.isArray(e)}function H(){window.open("https://github.com/Aircoookie/WLED/wiki/Settings#usermod-settings")}function B(){window.open("/settings","_self")}function S(){"file:"==window.location.protocol&&(loc=!0,(locip=localStorage.getItem("locIp"))||(locip=prompt("File Mode. Please enter WLED IP!"),localStorage.setItem("locIp",locip))),GetV(),numM>0||locip?ldS():gId("um").innerHTML="No Usermods installed."}function isF(e){return e===+e&&e!==(0|e)}function isI(e){return e===+e&&e===(0|e)}function check(e,n){var i=e.name.replace("[]","").substr(-3);if("number"==e.type&&"pin"==i.substr(0,3))for(var t=0;t<pins.length;t++)if(n!=pinO[t]){if(e.value==pins[t]||e.value<-1||e.value>39){e.style.color="red";break}e.style.color=e.value>33?"orange":"#fff"}}function getPins(e){if(isO(e))for(const[i,t]of Object.entries(e))if(isO(t))owner=i,getPins(t);else if("pin"==i.replace("[]","").substr(-3))if(Array.isArray(t))for(var n=0;n<t.length;n++)t[n]>=0&&(pins.push(t[n]),pinO.push(owner));else t>=0&&(pins.push(t),pinO.push(owner));else if(Array.isArray(t))for(n=0;n<t.length;n++)getPins(t[n])}function addField(e,n,i,t=!1){if(isO(i))for(const[t,o]of Object.entries(i))"unknown"===n||e.includes(":")?addField(e,t,o):addField(e+":"+n,t,o);else if(Array.isArray(i))for(var o=0;o<i.length;o++)addField(e,n,i[o],!0);else{var s,r=typeof i;switch(r){case"boolean":r="checkbox",s='value="true"'+(i?" checked":"");break;case"number":s=`value="${i}"`,"pin"===n.substr(-3)?(s+=' max="39" min="-1" style="width:40px;"',r="int"):s+=' step="any" style="width:100px;"';break;default:r="text",s=`value="${i}" style="width:250px;"`}e.includes(":")&&(urows+=e.substr(e.indexOf(":")+1)),urows+=` ${n}: `,"checkbox"==r?urows+=`<input type="hidden" name="${e}:${n}${t?"[]":""}" value="false">`:t||(urows+=`<input type="hidden" name="${e}:${n}${t?"[]":""}" value="${r}">`),urows+=`<input type="${"int"===r?"number":r}" name="${e}:${n}${t?"[]":""}" ${s} oninput="check(this,'${e.substr(e.indexOf(":")+1)}')"><br>`}}function ldS(){fetch((loc?"http://"+locip:"")+"/cfg.json",{method:"get"}).then(e=>(e.ok||(gId("lserr").style.display="inline"),e.json())).then(e=>{if(umCfg=e.um,getPins(e),urows="",isO(umCfg))for(const[e,n]of Object.entries(umCfg))urows+=`<hr><h3>${e}</h3>`,addField(e,"unknown",n);""===urows&&(urows="Usermods configuration not found.<br>Press <i>Save</i> to initialize defaults."),gId("um").innerHTML=urows}).catch((function(e){gId("lserr").style.display="inline",console.log(e)}))}function svS(e){e.preventDefault(),console.log(d.Sf),d.Sf.checkValidity()&&d.Sf.submit()}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="svS(event)"><div class="toprow">
<div class="helpB"><button type="button" onclick="H()">?</button></div><button 
type="button" onclick="B()">返回</button><button type="submit">保存</button><br>
<span id="lssuc" style="color:green;display:none">&#10004; 配置已保存!</span> <span 
id="lserr" style="color:red;display:none">&#9888; 无法加载配置</span><hr></div><h2>
用户配置设置</h2><div id="um">Loading settings...</div><hr><button type="button" 
onclick="B()">返回</button><button type="submit">保存</button></form></body></html>)=====";

